[
  {
    "type": "PUT",
    "url": "archivos/:id",
    "title": "Actualizar archivos",
    "name": "Actualizar_archivos",
    "group": "Archivos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del archivo a modificar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "archivoGuardado",
            "description": "<p>Objeto que devuelve al actualizar el archivo</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "archivoNoEncontrado",
            "description": "<p>Error el archivo con el id  no existe</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "errorActualizandoArchivo",
            "description": "<p>Error al actualizar el archivo</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "errorBuscandoArchivo",
            "description": "<p>Error al buscar archivo</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/archivos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "GET",
    "url": "proyectos/:id/descargar/:nombre",
    "title": "Descargar el archivo del servidor",
    "name": "Descargar_el_archivo",
    "group": "Archivos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del archivo</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "nombre",
            "description": "<p>Nombre del archivo a descargar</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorAlBuscarArchivo",
            "description": "<p>Error al buscar el archivo en el servidor</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "DELETE",
    "url": "proyectos/:idProyecto/archivo/:id",
    "title": "Eliminar Archivo",
    "name": "Eliminar_Archivo_del_proyecto",
    "group": "Archivos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "idProyecto",
            "description": "<p>id del proyecto el cual pertenece el archivo</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del archivo a eliminar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "object",
            "optional": false,
            "field": "ArchivoEliminado",
            "description": "<p>Envía el archivo que ha sido eliminado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ArchivoInexistente",
            "description": "<p>El archivo con el id no existe en la base de datos</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ProeyctoInexistente",
            "description": "<p>El proyecto con ese id no existe en la base de datos</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorAlEliminarArchivo",
            "description": "<p>Error al momento de eliminar el archivo</p>"
          },
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorEncontrandoProyecto",
            "description": "<p>Error al momento de encontrar el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "DELETE",
    "url": "archivos/:id",
    "title": "Eliminar archivo",
    "name": "Eliminar_archivo_de_la_base_de_datos",
    "group": "Archivos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del archivo a eliminar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "archivoBorrado",
            "description": "<p>Objeto devuelto al eliminar archivo de la base de datos</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "errorBuscandoArchivo",
            "description": "<p>No existe un archivo con ese id</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "errorBorrandoArchivo",
            "description": "<p>Error al borrar el archivo</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/archivos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "GET",
    "url": "archivos/",
    "title": "Obtener todos los archivos",
    "name": "Obtener_todos_los_archivos",
    "group": "Archivos",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "archivos",
            "description": "<p>Devuelve todos los archivos de la base de datos</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "err",
            "description": "<p>Error cargando archivos</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/archivos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "POST",
    "url": "archivos/",
    "title": "Registrar archivos",
    "name": "Registrar_archivo_subido",
    "group": "Archivos",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "archivoGuardado",
            "description": "<p>Objeto con los datos del archivo guardado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "err",
            "description": "<p>Error al crear archivo</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/archivos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "PUT",
    "url": "proyectos/:id/archivos",
    "title": "Subir archivo al servidor y registrar en la base de datos",
    "name": "Subir_archivo",
    "group": "Archivos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del proyecto para el cual se subirá y registrará el archivo</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ArchivoSubidoCorrectamente",
            "description": "<p>Devuelve un mensaje al completarse la subida del archivo</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ArchivoInvalido",
            "description": "<p>Error si el archivo es inválido</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorAlBuscarArchivo",
            "description": "<p>Error al momento de buscar del archivo</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorAlBuscarProyecto",
            "description": "<p>Error al momento de buscar el proyecto en la base de datos</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorBuscandoElArchivo",
            "description": "<p>Error buscando si el archivo existe en el servidor</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorRegistrandoElArchivo",
            "description": "<p>Error al momento de registrar el archivo en la base de datos</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorRelacionandoElArchivo",
            "description": "<p>Error al momento de añadir el archivo al proyecto</p>"
          }
        ],
        "409": [
          {
            "group": "409",
            "type": "json",
            "optional": false,
            "field": "ArchivoYaExistente",
            "description": "<p>Error si el archivo subido ya existe con el mismo nombre</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorMoviendoElArchivo",
            "description": "<p>Error al momento de mover el archivo en el servidor a la carpeta correspondiente</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "PUT",
    "url": "upload/:id",
    "title": "Subir imagen de perfil",
    "name": "Subir_imagen_de_perfil",
    "group": "Archivos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "usuarioActualizad",
            "description": "<p>Devuelve el usuario actualizdo lo cual permite refrescar la imagen de perfil en la aplciación web</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ArchivoInvalido",
            "description": "<p>El archivo seleccionado es inválido</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "UsuarioNoEncontrado",
            "description": "<p>El usuario con el id no pudo ser encontrado</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ArchivoNoEncontrado",
            "description": "<p>Problemas al encontrar el archivo</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "NoSeAcualiz",
            "description": "<p>óLaImagen La imagen de perfil no se puedo actualizar</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorLimpiandoCarpeta",
            "description": "<p>Error al momento de limpiar la carpeta del usuario</p>"
          },
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorMoviendoArchivo",
            "description": "<p>Error al mover el archivo a la carpeta designada</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/upload.js",
    "groupTitle": "Archivos"
  },
  {
    "type": "GET",
    "url": "busqueda/info/:tabla/:busqueda",
    "title": "Busqueda en usuarios o proyectos",
    "name": "Busqueda_espec_fica",
    "group": "Busqueda",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tabla",
            "description": "<p>Nombre de la colección en la que se busca</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "busqueda",
            "description": "<p>Término a buscar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ArregloDeDatos",
            "description": "<p>Devuelve un arreglo de usuarios o proyectos encontrados por la búsqueda</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "TiposIncorrectos",
            "description": "<p>Error cuando se buscan tablas que no existen</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/busqueda.js",
    "groupTitle": "Busqueda"
  },
  {
    "type": "GET",
    "url": "busqueda/todo/:busqueda",
    "title": "Esta ruta nos permite encontrar usuarios y proyectos",
    "name": "Busqueda_general",
    "group": "Busqueda",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "busqueda",
            "description": "<p>El término que se recibe para buscar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "respuesta",
            "description": "<p>Devuelve un objeto que contiene el/los usuario(s) y/o proyecto(s) encontrado(s)</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/busqueda.js",
    "groupTitle": "Busqueda"
  },
  {
    "type": "GET",
    "url": "imgPerfil/:tipo/:id/:img",
    "title": "Obtener la imagen del usuario desde el servidor",
    "name": "Obtener_imagen_de_perfil",
    "group": "Img_Perfil",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "tipo",
            "description": "<p>Tipo de usuario</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "img",
            "description": "<p>Nombre de la imagen</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/obtenerImgPerfil.js",
    "groupTitle": "Img_Perfil"
  },
  {
    "type": "GET",
    "url": "login/renuevatoken",
    "title": "Renovación del token del usuario",
    "name": "Renovar_token",
    "group": "Login",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "token",
            "description": "<p>devuelve un nuevo token</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/login.js",
    "groupTitle": "Login"
  },
  {
    "type": "POST",
    "url": "login/",
    "title": "Iniciar Sesion",
    "name": "Verificar_login",
    "group": "Login",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "LoginCorrecto",
            "description": "<p>Envía los datos del usuario y un token</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "CredencialesIncorrectas",
            "description": "<p>Error si la autenticación del usuario falla</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "UsuarioInactivo",
            "description": "<p>Error si el usuario no está en estaado activo</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorDeBusqueda",
            "description": "<p>Error al no encontrar el usuario en la base de datos</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/login.js",
    "groupTitle": "Login"
  },
  {
    "type": "POST",
    "url": "proyectos/:id",
    "title": "Crear Proyecto",
    "name": "Crear_proyecto",
    "group": "Proyectos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ProyectoCreado",
            "description": "<p>Regresa el proyecto que ha sido creado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorCreandoProyecto",
            "description": "<p>Error al crear el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Proyectos"
  },
  {
    "type": "GET",
    "url": "proyectos/id/:id",
    "title": "Obtener proyecto a editar",
    "name": "Editar_Proyecto",
    "group": "Proyectos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del proyecto a editar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ProyectoAEditar",
            "description": "<p>Devuelve los datos del proyecto a editar</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ProyectoNoEncontrado",
            "description": "<p>Error si no se encontró el proeycto en la base de datos</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorAlBuscarProeycto",
            "description": "<p>Error al momento de buscar el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Proyectos"
  },
  {
    "type": "PUT",
    "url": "proyectos/editarProyecto/:id",
    "title": "Editar Proyecto",
    "name": "Editar_Proyecto",
    "group": "Proyectos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del proyecto a editar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ProyectoEditado",
            "description": "<p>Devuelve el proyecto editado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ProyectoNoEncontrado",
            "description": "<p>Error si no se enconró el proyecto buscado en la base de datos</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorAlBuscarProyecto",
            "description": "<p>Error al momento de buscar el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Proyectos"
  },
  {
    "type": "DELETE",
    "url": "proyectos/:id",
    "title": "Eliminar Proyecto",
    "name": "Eliminar_Proyecto",
    "group": "Proyectos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del proyecto a eliminar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ProyectoEliminado",
            "description": "<p>Regresa el proyecto que ha sido eliminado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ProyectoInexistente",
            "description": "<p>Error al encontrar el archivo en la base de datos</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorEliminandoProyecto",
            "description": "<p>Error al eliminar el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Proyectos"
  },
  {
    "type": "GET",
    "url": "proeyctos/misproyectos/:id",
    "title": "Obtener mis proyectos",
    "name": "Mis_Proyectos",
    "group": "Proyectos",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "MisProyectos",
            "description": "<p>Devuelve un json con la información de los proyectos en los que participa el usuario</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorBuscando",
            "description": "<p>Error mientras se buscaba el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Proyectos"
  },
  {
    "type": "GET",
    "url": "proyectos/",
    "title": "Obtener todos los proyectos",
    "name": "Obtener_todos_los_proyectos",
    "group": "Proyectos",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "ProyetosEncontrados",
            "description": "<p>Envía los proyectos encontrados</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorCargandopProyectos",
            "description": "<p>Error al cargar los proyectos desde el servidor</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/proyectos.js",
    "groupTitle": "Proyectos"
  },
  {
    "type": "PUT",
    "url": "tareas/actualizar/:idTarea",
    "title": "Actualizar la tarea",
    "name": "Actualizar_tarea",
    "group": "Tareas",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "idTarea",
            "description": "<p>id de la tarea a actualizar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "TareaActualizada",
            "description": "<p>Regresa la tarea actualizada</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "TareaInexistente",
            "description": "<p>La tarea con el id no existe</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorAlActualizar",
            "description": "<p>Error al actualizar la tarea</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorBuscandoTarea",
            "description": "<p>Error al buscar la tarea en la base de datos</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/tareas.js",
    "groupTitle": "Tareas"
  },
  {
    "type": "POST",
    "url": "tareas/:id/crear",
    "title": "Crear Tarea",
    "name": "Crear_Tarea",
    "group": "Tareas",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del proyecto</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "TareaCreada",
            "description": "<p>Devuelve la tarea creada</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorCreandoTarea",
            "description": "<p>Error al momento de crear la tarea</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorVinculandoTarea",
            "description": "<p>Error al vincular la tarea con el proyecto</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/tareas.js",
    "groupTitle": "Tareas"
  },
  {
    "type": "DELETE",
    "url": "tareas/eliminarTarea/:idTarea",
    "title": "Eliminar tarea",
    "name": "Eliminar_Tarea",
    "group": "Tareas",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "idTarea",
            "description": "<p>id de la tarea a eliminar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "TareaEliminada",
            "description": "<p>Devuelve la tarea eliminada</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "TareaInexistente",
            "description": "<p>La tarea a eliminar no existe</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorEliminandoLaTarea",
            "description": "<p>Error al momento de eliminar la tarea</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/tareas.js",
    "groupTitle": "Tareas"
  },
  {
    "type": "GET",
    "url": "tareas/:id/mistareas",
    "title": "Obtener tareas del usuario",
    "name": "Mis_tareas",
    "group": "Tareas",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "Tareas",
            "description": "<p>Se envían las tareas a las cuales el usuario está asignado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorObteniendoTareas",
            "description": "<p>Error mientras se obtenían las tareas</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/tareas.js",
    "groupTitle": "Tareas"
  },
  {
    "type": "GET",
    "url": "tareas/:id/tareas",
    "title": "Obtene todas las tareas",
    "name": "Obtener_todas_las_tareas",
    "group": "Tareas",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del proyecto</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "tareas",
            "description": "<p>Devuelve las tareas encontradas del proyecto</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "optional": false,
            "field": "ErrorCargandoTareas",
            "description": "<p>Error al momento de obtener las tareas</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/tareas.js",
    "groupTitle": "Tareas"
  },
  {
    "type": "PUT",
    "url": "tareas/tareaTerminada",
    "title": "Terminar tarea",
    "name": "Terminar_tarea",
    "group": "Tareas",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "idT",
            "description": "<p>id de la tarea</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "TareaActualizada",
            "description": "<p>Devuelve la tarea actualizada</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/tareas.js",
    "groupTitle": "Tareas"
  },
  {
    "type": "PUT",
    "url": "usuario/:id",
    "title": "Actualziar Usuario (Perfil)",
    "name": "Actualizar_Usuario",
    "group": "Usuarios",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario a actualizar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "UsuarioActualizado",
            "description": "<p>Devuelve el usuario actualizado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorActualizandoUsuario",
            "description": "<p>Error al actualizar el usuario</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "PasswordIncorrecto",
            "description": "<p>EL password introducido para actualizar es incorrecto</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "UsuarioInexistente",
            "description": "<p>Usuario con el id no existe</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorBuscandoUsuario",
            "description": "<p>Error al buscar el usuario</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/usuario.js",
    "groupTitle": "Usuarios"
  },
  {
    "type": "POST",
    "url": "/",
    "title": "Crear usuario",
    "name": "Crear_usuario",
    "group": "Usuarios",
    "success": {
      "fields": {
        "201": [
          {
            "group": "201",
            "type": "json",
            "optional": false,
            "field": "UsuarioCreado",
            "description": "<p>Devuelve el usuario creado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorCreandoUsuario",
            "description": "<p>Error al momento de crear un usuario</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/usuario.js",
    "groupTitle": "Usuarios"
  },
  {
    "type": "PUT",
    "url": "usuario/editarUsuario/:id",
    "title": "Editar usuarios",
    "name": "Editar_Usuario",
    "group": "Usuarios",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario a editar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "name",
            "description": "<p>description</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorActualizandoUsuario",
            "description": "<p>Error al momento de actualizar el usuario</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "UsuarioInexistente",
            "description": "<p>Usuario con el id no existe</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorBuscandoUsuario",
            "description": "<p>Error al buscar el usuario</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/usuario.js",
    "groupTitle": "Usuarios"
  },
  {
    "type": "DELETE",
    "url": "usuario/:id",
    "title": "Eliminar Usuario",
    "name": "EliminarUsuario",
    "group": "Usuarios",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>id del usuario a eliminar</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "UsuarioEliminado",
            "description": "<p>Devuelve el usuario eliminado</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "400": [
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "ErrorEliminandoDatosDelUsuario",
            "description": "<p>Error al momento de eliminar los archivos pertenecientes al usuario</p>"
          },
          {
            "group": "400",
            "type": "json",
            "optional": false,
            "field": "UsuarioInexistente",
            "description": "<p>Usuario con el id no existe</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorEliminandoUsuario",
            "description": "<p>Error al eliminar el usuario</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/usuario.js",
    "groupTitle": "Usuarios"
  },
  {
    "type": "GET",
    "url": "usuario/",
    "title": "Obtener usuarios",
    "name": "Obtener_usuarios",
    "group": "Usuarios",
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "json",
            "optional": false,
            "field": "usuarios",
            "description": "<p>Devuelve todos los usuarios</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "json",
            "optional": false,
            "field": "ErrorCargandoUsuarios",
            "description": "<p>Error al momento de cargar usuarios</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "routes/usuario.js",
    "groupTitle": "Usuarios"
  }
]
